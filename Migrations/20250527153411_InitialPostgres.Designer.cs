// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VehicleAPI.Data;

#nullable disable

namespace VehicleAPI.Migrations
{
    [DbContext(typeof(VehicleDbContext))]
    [Migration("20250527153411_InitialPostgres")]
    partial class InitialPostgres
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FuelSupplyRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("CantidadGalones")
                        .HasColumnType("numeric(10,3)");

                    b.Property<string>("DiligenciadoPor")
                        .HasColumnType("text");

                    b.Property<int?>("Kilometraje")
                        .HasColumnType("integer");

                    b.Property<DateTime>("MarcaTemporal")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PlacasDelVehiculo")
                        .HasColumnType("text");

                    b.Property<string>("TipoCombustible")
                        .HasColumnType("text");

                    b.Property<decimal?>("ValorCombustible")
                        .HasColumnType("numeric(12,2)");

                    b.HasKey("Id");

                    b.ToTable("FuelSupplies");
                });

            modelBuilder.Entity("VehicleAPI.Models.RegistroVehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CarroceriaAsientosCojineria")
                        .HasColumnType("text");

                    b.Property<string>("CarroceriaLatoneriaPuertas")
                        .HasColumnType("text");

                    b.Property<string>("CarroceriaLimpiabrisas")
                        .HasColumnType("text");

                    b.Property<string>("CarroceriaMarcoCarcasaMotos")
                        .HasColumnType("text");

                    b.Property<string>("CarroceriaRetrovisores")
                        .HasColumnType("text");

                    b.Property<string>("CarroceriaSegurosBloqueosPuertas")
                        .HasColumnType("text");

                    b.Property<string>("CarroceriaSuspension")
                        .HasColumnType("text");

                    b.Property<string>("CarroceriaVidrios")
                        .HasColumnType("text");

                    b.Property<string>("CertificadoRevision")
                        .HasColumnType("text");

                    b.Property<string>("ElectricoAlarmaReversa")
                        .HasColumnType("text");

                    b.Property<string>("ElectricoDireccionalesParqueo")
                        .HasColumnType("text");

                    b.Property<string>("ElectricoFarolas")
                        .HasColumnType("text");

                    b.Property<string>("ElectricoIndicadoresTablero")
                        .HasColumnType("text");

                    b.Property<string>("ElectricoLucesFrenoPare")
                        .HasColumnType("text");

                    b.Property<string>("ElectricoLucesReversa")
                        .HasColumnType("text");

                    b.Property<string>("ElectricoPito")
                        .HasColumnType("text");

                    b.Property<string>("ElementosAusenciaFugas")
                        .HasColumnType("text");

                    b.Property<string>("ElementosCadenaMotos")
                        .HasColumnType("text");

                    b.Property<string>("ElementosFrenosDiscoMotos")
                        .HasColumnType("text");

                    b.Property<string>("ElementosLabradoLlantas")
                        .HasColumnType("text");

                    b.Property<string>("ElementosManijasFrenoClutchMotos")
                        .HasColumnType("text");

                    b.Property<string>("ElementosNivelLiquidos")
                        .HasColumnType("text");

                    b.Property<string>("ElementosPedales")
                        .HasColumnType("text");

                    b.Property<string>("ElementosPresionLlantas")
                        .HasColumnType("text");

                    b.Property<string>("EntregaRecibe")
                        .HasColumnType("text");

                    b.Property<string>("FactoresImpidenMovilizacion")
                        .HasColumnType("text");

                    b.Property<DateTime?>("FechaVencimientoLicencia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaVencimientoRevision")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaVencimientoSoat")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FotoFrontalVehiculo")
                        .HasColumnType("text");

                    b.Property<string>("FotoLateralDerechoVehiculo")
                        .HasColumnType("text");

                    b.Property<string>("FotoLateralIzquierdoVehiculo")
                        .HasColumnType("text");

                    b.Property<string>("FotoTraseraVehiculo")
                        .HasColumnType("text");

                    b.Property<string>("LicenciaConduccion")
                        .HasColumnType("text");

                    b.Property<DateTime>("MarcaTemporal")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NombreConductor")
                        .HasColumnType("text");

                    b.Property<string>("NombreConductorCC")
                        .HasColumnType("text");

                    b.Property<string>("NombreResponsableVehiculoCC")
                        .HasColumnType("text");

                    b.Property<string>("Observaciones")
                        .HasColumnType("text");

                    b.Property<string>("PerteneceEmpresa")
                        .HasColumnType("text");

                    b.Property<string>("Placa")
                        .HasColumnType("text");

                    b.Property<string>("PrevencionAlarmaSeguridad")
                        .HasColumnType("text");

                    b.Property<string>("PrevencionCasco")
                        .HasColumnType("text");

                    b.Property<string>("PrevencionChalecoReflectivo")
                        .HasColumnType("text");

                    b.Property<string>("PrevencionCinturonesSeguridad")
                        .HasColumnType("text");

                    b.Property<string>("PrevencionExtintor")
                        .HasColumnType("text");

                    b.Property<string>("PrevencionKitCarretera")
                        .HasColumnType("text");

                    b.Property<string>("PrevencionLlantaRepuesto")
                        .HasColumnType("text");

                    b.Property<string>("SeguridadSocial")
                        .HasColumnType("text");

                    b.Property<string>("Soat")
                        .HasColumnType("text");

                    b.Property<string>("TarjetaPropiedad")
                        .HasColumnType("text");

                    b.Property<string>("VehiculoAutorizadoTransitar")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Registros");
                });
#pragma warning restore 612, 618
        }
    }
}
